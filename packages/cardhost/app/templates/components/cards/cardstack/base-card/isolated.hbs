{{!-- TODO move this into the @cardstack/base-card package when we support runtime js compilation --}}
<div
  class="isolated-card cardstack_base-card-isolated {{safe-css-string @card.name}}-isolated {{safe-css-string @card.adoptedFromName}}-isolated"
  data-test-isolated-card={{@card.name}}
  data-test-isolated-card-mode={{@mode}}
>
  <AnimatedContainer class={{if (or (eq @mode "view") (eq @mode "layout")) "isolated-card--view-fields"}}>
    {{#animated-each @fields key="nonce" watch="dragState" use=this.transition duration=this.duration as |field|}}
      {{#if @setFieldValue}}
        <FieldRenderer
          @field={{field}}
          @mode={{@mode}}
          @setFieldValue={{fn @setFieldValue field.name}}
          @selectField={{@selectField}}
          @selectedField={{@selectedField}}
        />
      {{else if (or @setNeededWhenEmbedded @setPosition @removeField @setFieldName)}}
        <section class="field-renderer--wrapper"
          tabindex="-1"
          data-test-card-add-field-draggable={{field.type}}
        >
            {{!-- {{on "mousedown" (action this.initMousedown)}}
            {{on "click" (action this.initClick)}} --}}
          <button
            class="field--move-btn"
            aria-label="Drag field"
            {{on "mousedown" (fn this.draggable.beginDragging field @card @toggleStubField)}}
            {{on "click" (fn this.draggable.clickDraggable field @card @toggleStubField)}}
            data-test-field-renderer-move-btn
            data-test-field-renderer-move-btn-position={{field.position}}
          >
          </button>
          <FieldRenderer
            @field={{field}}
            @mode={{@mode}}
            @removeField={{@removeField}}
            @setPosition={{@setPosition}}
            @setNeededWhenEmbedded={{@setNeededWhenEmbedded}}
            @setFieldName={{@setFieldName}}
            @selectField={{@selectField}}
            @selectedField={{@selectedField}}
          />
          <div class="field--action">
            {{#if (and @removeField (not field.isAdopted))}}
              {{!-- using field.nonce in case the user deletes the name of the field --}}
              <button {{on "click" (fn @removeField field.nonce)}}
                class="field--remove-btn"
                aria-label="Remove"
                data-test-field-renderer-remove-btn
              >
              </button>
            {{/if}}
          </div>
        </section>
        {{#if (and (eq @mode "schema") (not field.preview))}}
          <DropZone @position={{inc field.position}} @toggleStubField={{@toggleStubField}} @selectField={{@selectField}} />
        {{/if}}
      {{else}}
        <FieldRenderer @field={{field}} @mode={{@mode}}/>
      {{/if}}
    {{/animated-each}}
  </AnimatedContainer>
</div>