const JSONAPIFactory = require('@cardstack/test-support/jsonapi-factory');
module.exports = function({sourceId, packageName}) {
  // Article Card Schema
  let factory = new JSONAPIFactory(sourceId, packageName);

  factory.addResource('card-definitions')
    .withRelated('model', factory.addResource('content-types', 'articles')
      .withAttributes({ name: 'articles' })
      .withRelated('fields', [
        factory.addResource('fields', 'title').withAttributes({
          'is-metadata': true,
          'needed-when-embedded': true,
          'placeholder': 'Placeholder Title',
          'instructions': 'Choose a title that evokes feelings of harmony',
          'field-type': '@cardstack/core-types::string'
        }).withRelated('constraints', [
          factory.addResource('constraints')
            .withAttributes({
              'constraint-type': '@cardstack/core-types::not-null',
              'error-message': 'The title must not be empty.'
            })
        ]),
        factory.addResource('fields', 'body').withAttributes({
          'is-metadata': true,
          'field-type': '@cardstack/core-types::string'
        }),
        factory.addResource('fields', 'categories').withAttributes({
          'is-metadata': true,
          'needed-when-embedded': true,
          'field-type': '@cardstack/core-types::has-many'
        }).withRelated('related-types', [
          // this is modeling an enumeration
          factory.addResource('content-types', 'categories')
        ]),
        factory.addResource('fields', 'author').withAttributes({
          'is-metadata': true,
          'needed-when-embedded': true,
          'field-type': '@cardstack/core-types::belongs-to'
        }).withRelated('related-types', [{ type: 'content-types', id: 'cards' }])
      ])
    );
  return factory.getModelsFor('card-definitions');
};