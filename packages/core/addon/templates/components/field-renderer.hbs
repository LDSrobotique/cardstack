{{this.onFieldUpdated}}

{{#if (and (eq @mode "schema") @dropField)}}
  <DropZone @dropField={{@dropField}} @position={{@field.position}} />
{{/if}}

{{!-- TODO: let's think of a more accessible solution here, consider making this a button--}}
{{!-- TODO: also we should also turn on a11y linting --}}
<div {{on "click" (fn this.selectField @field)}}
  class={{concat
    @mode
    "-field "
    "field-"
    @field.name
    " field-type-"
    this.dasherizedType
  }}
  data-test-field={{@field.name}}
  data-test-field-type={{@field.type}}
  data-test-field-mode={{@mode}}
>
  {{#if (eq @mode "view")}}
    {{#let (component this.fieldViewer) as | FieldViewer |}}
      <FieldViewer @field={{@field}}/>
    {{/let}}
  {{else if (eq @mode "edit")}}
    {{#let (component this.fieldEditor) as | FieldEditor |}}
      <FieldEditor
        @field={{@field}}
        @setFieldValue={{@setFieldValue}}
      />
    {{/let}}
  {{else if (eq @mode "schema")}}
    <div>
      field type:
      <span data-test-field-renderer-field-type>
        {{@field.type}}
      </span>
    </div>
    <div>
      is metadata field:
      <span data-test-field-renderer-is-meta>
        {{if @field.json.data.attributes.is-metadata "true" "false"}}
      </span>
    </div>
    <div>
      {{#if @setFieldName}}
        <label
          data-test-field-renderer-field-name-label
          for={{concat "edit-field-name-" @field.nonce}}
        >
          Field name:
        </label>
        <Input
          @id={{concat "edit-field-name-" @field.nonce}}
          @class="field-renderer-field-name-input"
          @value={{this.newFieldName}}
          @key-up={{action this.updateFieldName}}
        />
      {{/if}}
    </div>
    <div>
      {{#if @setNeededWhenEmbedded}}
        <Input
          @checked={{@field.neededWhenEmbedded}}
          @class="field-renderer--needed-when-embedded-chbx"
          @type="checkbox"
          @id={{concat "edit_" @field.name "_embedded"}}
          @click={{fn @setNeededWhenEmbedded @field.name}}
        />
        <label for="new_field_embedded">Needed when Embedded</label>
      {{else}}
        needed when embedded:
        <span data-test-field-renderer-embedded >
          {{if @field.neededWhenEmbedded "true" "false"}}
        </span>
      {{/if}}
    </div>

    <div class="field-renderer--field-btn-wrapper">
      {{#if @setPosition}}
        {{#if (gt @field.position 0)}}
          <button {{on "click" (fn @setPosition @field.name (dec @field.position))}}
            data-test-field-renderer-move-up-btn
          >
            <strong>▲</strong>
          </button>
        {{/if}}
        {{#if (lt @field.position (dec @field.card.isolatedFields.length))}}
          <button {{on "click" (fn @setPosition @field.name (inc @field.position))}}
            data-test-field-renderer-move-down-btn
          >
            <strong>▼</strong>
          </button>
        {{/if}}
      {{/if}}
      {{#if @removeField}}
        <button {{on "click" (fn @removeField @field.name)}}
          data-test-field-renderer-remove-btn
        >
          Remove
        </button>
      {{/if}}
    </div>
  {{/if}}
</div>